(function(m, g) {
    var d = {},
        h = null,
        l = {
            version: "0",
            path: "/s1/p2/util.min.js",
            pathUncompressed: "/s1/p2/util.js"
        },
        k = {
            name: "PSUtil"
        };
    d.bind = function(a, b, c) {
        "undefined" !== typeof a && null !== a && ("undefined" !== typeof a.addEventListener && null !== a.addEventListener ? a.addEventListener(b, c, !1) : a.attachEvent && (a["e" + b + c] = c, a[b + c] = function() {
            return a["e" + b + c](m.event)
        }, a.attachEvent("on" + b, a[b + c])))
    };
    d.unbind = function(a, b, c) {
        a.removeEventListener ? a.removeEventListener(b, c, !1) : a.detachEvent && (a.detachEvent("on" + b, a[b +
            c]), a[b + c] = null, a["e" + b + c] = null)
    };
    d.addClass = function(a, b) {
        a && 0 > a.className.indexOf() && (a.className = a.className ? a.className + " " + b : b)
    };
    d.removeClass = function(a, b) {
        a && a.className && (a.className = a.className.replace(b, ""))
    };
    d.clearClass = function(a) {
        a.className && (a.className = "")
    };
    d.setCookie = function(a, b, c) {
        var d = new Date;
        0 > c ? g.cookie = a + "=" + escape(b) + "; path=/; domain=nexon.com;" : (d.setDate(d.getDate() + c), g.cookie = a + "=" + escape(b) + "; path=/; domain=nexon.com; expires=" + d.toGMTString() + ";")
    };
    d.getCookie =
        function(a) {
            a += "=";
            for (var b = 0; b <= g.cookie.length;) {
                var c = b + a.length;
                if (g.cookie.substring(b, c) == a) return -1 == (endOfCookie = g.cookie.indexOf(";", c)) && (endOfCookie = g.cookie.length), unescape(g.cookie.substring(c, endOfCookie));
                b = g.cookie.indexOf(" ", b) + 1;
                if (0 == b) break
            }
            return ""
        };
    d.removeCookie = function(a) {
        var b = new Date;
        b.setDate(b.getDate() - 1);
        g.cookie = a + "=; path=/; domain=nexon.com; expires=" + b.toGMTString() + ";"
    };
    d.isFunction = function(a) {
        return "function" === typeof a
    };
    d.ajax = function(a) {
        var b = new RegExp(/\?/);
        a = d.extend({
            modName: null,
            src: null,
            success: null
        }, a);
        a.src += b.test(a.src) ? "&" : "?";
        null !== a.success && (a.src += "callback=" + (null == a.modName ? k.name : a.modName) + ".callback." + a.success);
        a.src += "&rd=" + Math.random();
        d.appendScript({
            src: a.src,
            charset: "utf-8"
        })
    };
    d.appendScript = function(a) {
        a = a || {
            src: null,
            contentType: null,
            charset: null
        };
        var b = g.getElementsByTagName("head")[0],
            c = g.createElement("script");
        c.type = a.contentType || "text/javascript";
        c.charset = a.charset || "utf-8";
        c.src = a.src;
        b.appendChild(c)
    };
    d.getScriptTag =
        function(a) {
            for (var b = document.getElementsByTagName("script"), c = 0, d = b.length; c < d; c++) {
                var e = b[c].getAttribute("src");
                if (null != e && -1 < e.indexOf(a)) return e
            }
            return null
        };
    d.getLinkTag = function(a) {
        for (var b = document.getElementsByTagName("link"), c = 0, d = b.length; c < d; c++) {
            var e = b[c].getAttribute("href");
            if (null != e && -1 < e.indexOf(a)) return e
        }
        return null
    };
    d.removeTag = function(a) {
        a.parentNode.removeChile(a)
    };
    d.extend = function(a, b) {
        var c = d.clone(a),
            f = d.clone(b);
        if ("undefined" == typeof c || null == c) return f;
        if ("undefined" ==
            typeof f) return c;
        if (null == f || "object" != typeof f || "object" != typeof c) return f;
        for (var e in c) c[e] = d.extend(c[e], f[e]), f[e] = void 0;
        for (e in f) "undefined" != typeof f[e] && (c[e] = f[e]);
        return c
    };
    d.stringfy = function(a) {
        if ("undefined" == typeof a || null == a) return "";
        var b = "";
        if (a.constructor == Array) {
            for (var c = 0; c < a.length; c++) 0 < c && (b += ","), b += d.stringfy(a[c]);
            return "[" + b + "]"
        }
        if ("object" == typeof a) {
            c = !0;
            for (var f in a) c ? c = !1 : b += ",", b += '"' + f + '":' + d.stringfy(a[f]);
            return "{" + b + "}"
        }
        return "" + a
    };
    d.clone = function(a) {
        if ("undefined" ==
            typeof a || null == a) return a;
        if (a.constructor == Array) {
            for (var b = [], c = 0; c < a.length; c++) b[c] = d.clone(a[c]);
            return b
        }
        if ("object" == typeof a) {
            b = {};
            for (c in a) b[c] = d.clone(a[c]);
            return b
        }
        return a
    };
    (function() {
        for (var a = g.getElementsByTagName("script"), b = 0, c = a.length; b < c; b++) {
            var d = a[b].getAttribute("src");
            if (null != d && (-1 < d.indexOf(l.path) || -1 < d.indexOf(l.pathUncompressed))) {
                h = a[b];
                break
            }
        }
        if (h)
            if (h.dataset) b = h.dataset, b.name = b.name || k.name, k = b;
            else
                for (a = h.attributes, b = 0, c = a.length; b < c; b++) 0 == a[b].name.indexOf("data-") &&
                    (k[a[b].name.substring(5)] = a[b].value)
    })();
    m[k.name] = d.extend(l, d)
})(this, document);